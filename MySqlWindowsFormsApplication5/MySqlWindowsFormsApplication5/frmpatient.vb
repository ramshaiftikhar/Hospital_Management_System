' ++++++++++++++++++++++++++++++++++++++++++++++++++
' This code is generated by a tool and is provided "as is", without warranty of any kind,
' express or implied, including but not limited to the warranties of merchantability,
' fitness for a particular purpose and non-infringement.
' In no event shall the authors or copyright holders be liable for any claim, damages or
' other liability, whether in an action of contract, tort or otherwise, arising from,
' out of or in connection with the software or the use or other dealings in the software.
' ++++++++++++++++++++++++++++++++++++++++++++++++++
' 

Imports System.ComponentModel
Imports MySql.Data.MySqlClient

Namespace MySqlWindowsFormsApplication5
	
	Public Class frmpatient
		
		Private ad As MySqlDataAdapter
		
		Private Sub frmpatient_Load(sender As System.Object, e As System.EventArgs) Handles MyBase.Load
            Dim strConn As String = "port=3306;server=localhost;user id=root;database=hospital;password=fus939597;persistsecurityinfo=True;allowuservariables=True;"
			ad = New MySqlDataAdapter("select * from `patient`", strConn)
			Dim builder As MySqlCommandBuilder = New MySqlCommandBuilder(ad)
			ad.Fill(Me.newDataSet.patient)
			ad.DeleteCommand = builder.GetDeleteCommand()
			ad.UpdateCommand = builder.GetUpdateCommand()
			ad.InsertCommand = builder.GetInsertCommand()
			Dim ad3 As MySqlDataAdapter
		End Sub
		
		Private Sub ToolStripButton1_Click(sender As System.Object, e As System.EventArgs) Handles ToolStripButton1.Click
			If Not Me.Validate() Then
				Return
			End If
			If TypeOf( CType(patientBindingSource.Current, DataRowView )( "D_O_B" ) ) Is DBNull Then 
				CType(patientBindingSource.Current, DataRowView )("D_O_B") = D_O_B_dateTimePicker.Value
			End If
			patientBindingSource.EndEdit()
			ad.Update(Me.newDataSet.patient)
		End Sub
		
		Private Sub frmpatient_FormClosing(sender As System.Object, e As System.Windows.Forms.FormClosingEventArgs) Handles MyBase.FormClosing
			e.Cancel = False
		End Sub
		
        Private Sub Patient_IDTextBox_Validating(sender As Object, e As CancelEventArgs) Handles Patient_IDTextBox.Validating

            e.Cancel = False
            If String.IsNullOrEmpty(Patient_IDTextBox.Text) Then
                e.Cancel = True
                ErrorProvider1.SetError(Patient_IDTextBox, "The field Patient_ID is required")
            End If
            Dim v As Integer
            Dim s As String = Patient_IDTextBox.Text
            If Not Integer.TryParse(s, v) Then
                e.Cancel = True
                ErrorProvider1.SetError(Patient_IDTextBox, "The field Patient_ID must be Integer.")
            End If
            If Not e.Cancel Then
                ErrorProvider1.SetError(Patient_IDTextBox, "")
            End If
        End Sub
		
        Private Sub Patient_NameTextBox_Validating(sender As Object, e As CancelEventArgs) Handles Patient_NameTextBox.Validating

            e.Cancel = False
            If String.IsNullOrEmpty(Patient_NameTextBox.Text) Then
                e.Cancel = True
                ErrorProvider1.SetError(Patient_NameTextBox, "The field Patient_Name is required")
            End If
            If Not e.Cancel Then
                ErrorProvider1.SetError(Patient_NameTextBox, "")
            End If
        End Sub
		
        Private Sub AgeTextBox_Validating(sender As Object, e As CancelEventArgs) Handles AgeTextBox.Validating

            e.Cancel = False
            If String.IsNullOrEmpty(AgeTextBox.Text) Then
                e.Cancel = True
                ErrorProvider1.SetError(AgeTextBox, "The field Age is required")
            End If
            Dim v As Integer
            Dim s As String = AgeTextBox.Text
            If Not Integer.TryParse(s, v) Then
                e.Cancel = True
                ErrorProvider1.SetError(AgeTextBox, "The field Age must be Integer.")
            End If
            If Not e.Cancel Then
                ErrorProvider1.SetError(AgeTextBox, "")
            End If
        End Sub
		
        Private Sub GenderTextBox_Validating(sender As Object, e As CancelEventArgs) Handles GenderTextBox.Validating

            e.Cancel = False
            If String.IsNullOrEmpty(GenderTextBox.Text) Then
                e.Cancel = True
                ErrorProvider1.SetError(GenderTextBox, "The field Gender is required")
            End If
            If Not e.Cancel Then
                ErrorProvider1.SetError(GenderTextBox, "")
            End If
        End Sub
		
        Private Sub AddressTextBox_Validating(sender As Object, e As CancelEventArgs) Handles AddressTextBox.Validating

            e.Cancel = False
            If String.IsNullOrEmpty(AddressTextBox.Text) Then
                e.Cancel = True
                ErrorProvider1.SetError(AddressTextBox, "The field Address is required")
            End If
            If Not e.Cancel Then
                ErrorProvider1.SetError(AddressTextBox, "")
            End If
        End Sub
		
        Private Sub Mob_numTextBox_Validating(sender As Object, e As CancelEventArgs) Handles Mob_numTextBox.Validating

            e.Cancel = False
            If String.IsNullOrEmpty(Mob_numTextBox.Text) Then
                e.Cancel = True
                ErrorProvider1.SetError(Mob_numTextBox, "The field Mob_num is required")
            End If
            If Not e.Cancel Then
                ErrorProvider1.SetError(Mob_numTextBox, "")
            End If
        End Sub
		
        Private Sub DichargedTextBox_Validating(sender As Object, e As CancelEventArgs) Handles DichargedTextBox.Validating

            e.Cancel = False
            If String.IsNullOrEmpty(DichargedTextBox.Text) Then
                e.Cancel = True
                ErrorProvider1.SetError(DichargedTextBox, "The field Dicharged is required")
            End If
            If Not e.Cancel Then
                ErrorProvider1.SetError(DichargedTextBox, "")
            End If
        End Sub
		
		
        Private Sub bindingNavigatorAddNewItem_Click(sender As System.Object, e As System.EventArgs) Handles BindingNavigatorAddNewItem.Click
            patientBindingSource.AddNew()
        End Sub
		
        Private Sub CmdHelp_Click(sender As Object, e As EventArgs) Handles CmdHelp.Click

        End Sub
        Private Sub Cmdmain_Click(sender As Object, e As EventArgs) Handles Cmdmain.Click
            frmmainreceptionist.Show()
            Me.Hide()
        End Sub
        Private Sub Cmdend_Click(sender As Object, e As EventArgs) Handles Cmdend.Click
            Dim response As String
            response = MsgBox("Do you want to close?", MsgBoxStyle.YesNoCancel) 'a message will be displayed and answer will be stored as string variable
            If response = vbYes Then 'use of selection programming structure
                Me.Close()
            End If
        End Sub

   

        Private Sub Button1_Click(sender As Object, e As EventArgs) Handles Button1.Click
            patientBindingSource.MoveNext()
        End Sub

        Private Sub Button2_Click(sender As Object, e As EventArgs) Handles Button2.Click
            patientBindingSource.MovePrevious()
        End Sub

        Private Sub Button3_Click(sender As Object, e As EventArgs) Handles Button3.Click
            patientBindingSource.MoveFirst()
        End Sub

        Private Sub Button4_Click(sender As Object, e As EventArgs) Handles Button4.Click
            patientBindingSource.MoveLast()
        End Sub

        Private Sub Button5_Click(sender As Object, e As EventArgs) Handles Button5.Click
           
                If Patient_NameTextBox.Text = "" Then 'blanks the name
                    MsgBox("Must Enter Patient's Name", vbOKOnly, "Error") 'message box
                    Patient_NameTextBox.Focus() 'move cursor at the text box on no entry
                    Patient_NameTextBox.Text = "" 'empties the text box on no entry
                ElseIf IsNumeric(Patient_NameTextBox.Text) = True Then 'to check whether the name contains numeric values
                    MsgBox("Enter only Characters in Patient Name", vbOKOnly, "Error")
                    Patient_NameTextBox.Focus() 'move cursor at the text box on invalid entry
                    Patient_NameTextBox.Text = "" 'empties the text box on invalid entry
                ElseIf Len(Patient_NameTextBox.Text) < 5 Or Len(Patient_NameTextBox.Text) > 20 Then 'name is between 5 to 20 characters
                    MsgBox("Invalid Name Length, Enter between 5 to 20 characters", vbOKOnly, "Error")
                    Patient_NameTextBox.Focus() 'move cursor at the text box on invalid length
                Patient_NameTextBox.Text = "" 'to make text box blank on invalid length
            ElseIf Patient_IDTextBox.Text = "" Then 'blanks the name
                MsgBox("Must Enter Patient's ID", vbOKOnly, "Error") 'message box
                Patient_NameTextBox.Focus() 'move cursor at the text box on no entry
                Patient_NameTextBox.Text = "" 'empties the text box on no entry
            End If
            ad.Update(Me.newDataSet.patient)
        End Sub

        Private Sub Button6_Click(sender As Object, e As EventArgs) Handles Button6.Click
            patientBindingSource.AddNew()
        End Sub

        Private Sub Button7_Click(sender As Object, e As EventArgs) Handles Button7.Click
            patientBindingSource.RemoveCurrent()
        End Sub
    End Class
	
End Namespace
